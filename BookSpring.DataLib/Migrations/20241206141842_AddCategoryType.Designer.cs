// <auto-generated />
using BookSpring.DataLib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookSpring.DataLib.Migrations
{
    [DbContext(typeof(BookContext))]
    [Migration("20241206141842_AddCategoryType")]
    partial class AddCategoryType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("BookModelCategoryModel", b =>
                {
                    b.Property<string>("BooksId")
                        .HasColumnType("varchar(64)");

                    b.Property<string>("CategoriesKey")
                        .HasColumnType("varchar(64)");

                    b.HasKey("BooksId", "CategoriesKey");

                    b.HasIndex("CategoriesKey");

                    b.ToTable("BookModelCategoryModel");
                });

            modelBuilder.Entity("BookSpring.DataLib.DataModels.BookModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("EBookUrl")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("LendDate")
                        .HasColumnType("varchar(64)");

                    b.Property<string>("LendToId")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ReturnDate")
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LendToId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookSpring.DataLib.DataModels.CategoryModel", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(64)");

                    b.HasKey("Key");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BookSpring.DataLib.DataModels.UserModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Identity")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BookModelCategoryModel", b =>
                {
                    b.HasOne("BookSpring.DataLib.DataModels.BookModel", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookSpring.DataLib.DataModels.CategoryModel", null)
                        .WithMany()
                        .HasForeignKey("CategoriesKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookSpring.DataLib.DataModels.BookModel", b =>
                {
                    b.HasOne("BookSpring.DataLib.DataModels.UserModel", "CreatedBy")
                        .WithMany("CreatedBooks")
                        .HasForeignKey("CreatedById");

                    b.HasOne("BookSpring.DataLib.DataModels.UserModel", "LendTo")
                        .WithMany("LendBooks")
                        .HasForeignKey("LendToId");

                    b.Navigation("CreatedBy");

                    b.Navigation("LendTo");
                });

            modelBuilder.Entity("BookSpring.DataLib.DataModels.UserModel", b =>
                {
                    b.Navigation("CreatedBooks");

                    b.Navigation("LendBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
