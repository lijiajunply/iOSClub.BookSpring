@page "/Login"
@using System.Net.Http.Headers
@using BookSpring.WebApp.Models
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Nav
@inject HttpClient HttpClient
@inject AuthenticationStateProvider Authentication
@inject ISnackbar Snackbar

<MudContainer MaxWidth="MaxWidth.Small" Style="margin-top: 10%">
    <EditForm Model="@Model" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator/>
        <MudCard>
            <MudCardContent>
                <MudStack Justify="Justify.Center" Spacing="5">
                    <MudText Typo="Typo.h4" Style="text-align: center">登录</MudText>
                    <MudTextField Label="姓名"
                                  @bind-Value="Model.Name" For="@(() => Model.Name)"/>
                    <MudTextField Label="学号" Class="mt-3"
                                  @bind-Value="Model.Id" For="@(() => Model.Id)"/>
                    <div style="text-align: center">
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">提交</MudButton>
                        <p class="mt-3">没有账号? 去 <MudLink Typo="Typo.body2" Href="https://www.xauat.site/Signup" target="_blank">注册</MudLink> 一个</p>
                    </div>
                </MudStack>
                
            </MudCardContent>
        </MudCard>
    </EditForm>
</MudContainer>


@code {

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomRight;
        }

        base.OnAfterRender(firstRender);
    }

    private LoginModel Model { get; } = new();

    private async Task OnValidSubmit(EditContext context)
    {
        var response = await HttpClient.PostAsJsonAsync("http://localhost:5259/User", Model);
        if (response.IsSuccessStatusCode)
        {
            var jwt = await response.Content.ReadAsStringAsync();
            HttpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", jwt);
            var auth = (JwtProvider)Authentication;
            await auth.UpdateAuthState(jwt);
            Snackbar.Add("登录成功", Severity.Success);
            Nav.NavigateTo("/Dashboard", true);
        }
        else
        {
            Snackbar.Add("登录失败", Severity.Error);
        }
    }

}