@page "/Dashboard"
@using System.Diagnostics.CodeAnalysis
@using System.Net.Http.Headers
@using BookSpring.WebApp.Dialogs
@using BookSpring.WebApp.Models
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Nav
@inject IDialogService DialogService
@inject AuthenticationStateProvider authStateProvider
@inject ISnackbar Snackbar
@inject HttpClient httpClient

<PageTitle>用户面板 - iLibrary</PageTitle>

<MudGrid>
    <MudItem xs="12" sm="6" md="6">
        <MudPaper Elevation="25" Class="pa-4 rounded-lg" Style="height: 100%;">
            <MudGrid Style="height: 100%;">
                <MudItem xs="12" sm="6" md="6">
                    <MudPaper Class="d-flex justify-center flex-grow-1 gap-4 ava" Elevation="0">
                        <div Class="d-flex align-content-center flex-wrap">
                            <div>
                                <MudAvatar Color="Color.Primary" Size="Size.Large">
                                    <MudIcon Icon="@Icons.Material.Rounded.Person" Size="Size.Large"/>
                                </MudAvatar>
                                <div class="--mud-palette-text-secondary"
                                     style="margin: 5px;text-align: center;">
                                    @Member.Name
                                </div>
                            </div>
                        </div>
                    </MudPaper>
                </MudItem>
                <MudItem xs="12" sm="6" md="6">
                    <MudList T="string" Class="mx-auto mt-4">
                        <MudListItem Icon="@Icons.Material.Rounded.People"
                                     Text="姓名" SecondaryText="@Member.Name"/>
                        <MudListItem Icon="@Icons.Material.Rounded.Numbers"
                                     Text="学号" SecondaryText="@Member.Id"/>
                    </MudList>
                </MudItem>
            </MudGrid>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="6">
        <MudPaper Elevation="25" Class="pa-4 rounded-lg" Style="height: 100%;text-align: center">
            <MudList T="string" Class="mx-auto mt-4">
                <MudListItem OnClick="@(() => Nav.NavigateTo("/Dashboard#创建的书籍"))" Icon="@Icons.Material.Rounded.Book" Text="创建书籍" SecondaryText="@Member.CreatedBooks.Count.ToString()"/>
                <MudListItem OnClick="@(() => Nav.NavigateTo("/Dashboard#借到的书籍"))" Icon="@Icons.Material.Filled.Bookmarks" Text="借出" SecondaryText="@Member.LendBooks.Count.ToString()"/>
            </MudList>
        </MudPaper>
    </MudItem>
</MudGrid>

<MudPaper Elevation="25" Class="mt-10 mb-5 rounded-lg">
    <MudToolBar>
        <MudText id="创建的书籍" Typo="Typo.h6">创建的书籍</MudText>
        <MudSpacer/>
        <MudTooltip Text="添加图书">
            <MudIconButton Icon="@Icons.Material.Outlined.Add" OnClick="OpenDialogAsync"/>
        </MudTooltip>
    </MudToolBar>
    <MudTable T="BookModel" Hover
              Items="@Member.CreatedBooks"
              Class="mt-5"
              ReadOnly
              Breakpoint="Breakpoint.Sm"
              RowClass="cursor-pointer">
        <HeaderContent>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<BookModel, object>(x=>x.Name)">名称</MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<BookModel, object>(x=>x.Category)">标签</MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<BookModel, object>(x=>string.IsNullOrEmpty(x.EBookUrl))">
                    是否为电子书
                </MudTableSortLabel>
            </MudTh>
            <MudTh>书籍详情</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="名称">@context.Name</MudTd>
            <MudTd DataLabel="标签">
                @foreach (var s in context.Category.Split(","))
                {
                    <MudChip OnClick="@(() => Nav.NavigateTo($"/Category/{s.GetUrl()}"))"
                             Size="Size.Small" Label="true" T="string" Color="Color.Primary">@s</MudChip>
                }
            </MudTd>
            <MudTd DataLabel="电子/纸质">@(string.IsNullOrEmpty(context.EBookUrl) ? "纸质书" : "电子书")</MudTd>
            <MudTd DataLabel="书籍详情">
                <MudButton OnClick="@(() => Nav.NavigateTo($"/Book/{context.Id}"))"
                           StartIcon="@Icons.Material.Filled.OpenInNew">书籍详情
                </MudButton>
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new[] { 10, 25, int.MaxValue }"
                           RowsPerPageString="每页行数："
                           InfoFormat="{first_item}-{last_item}, 共{all_items}本书"
                           AllItemsText="全部"
                           HorizontalAlignment="@HorizontalAlignment.Center"/>
        </PagerContent>
    </MudTable>
</MudPaper>

<MudPaper Elevation="25" Class="mt-10 mb-5 rounded-lg">
    <MudToolBar>
        <MudText id="借到的书籍" Typo="Typo.h6">借到的书籍</MudText>
        <MudSpacer/>
        <MudButton OnClick="@(() => Nav.NavigateTo("/Library"))"
                   StartIcon="@Icons.Material.Outlined.Add">
            去借书
        </MudButton>
    </MudToolBar>
    <MudTable T="BookModel" Hover
              Items="@Member.LendBooks"
              Class="mt-5"
              ReadOnly
              Breakpoint="Breakpoint.Sm"
              RowClass="cursor-pointer">
        <HeaderContent>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<BookModel, object>(x=>x.Name)">名称</MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<BookModel, object>(x=>x.Category)">标签</MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<BookModel, object>(x=>string.IsNullOrEmpty(x.EBookUrl))">
                    是否为电子书
                </MudTableSortLabel>
            </MudTh>
            <MudTh>书籍详情</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="名称">@context.Name</MudTd>
            <MudTd DataLabel="标签">
                @foreach (var s in context.Category.Split(","))
                {
                    <MudChip OnClick="@(() => Nav.NavigateTo($"/Category/{s.GetUrl()}"))"
                             Size="Size.Small" Label="true" T="string" Color="Color.Primary">@s</MudChip>
                }
            </MudTd>
            <MudTd DataLabel="电子/纸质">@(string.IsNullOrEmpty(context.EBookUrl) ? "纸质书" : "电子书")</MudTd>
            <MudTd DataLabel="书籍详情">
                <MudButton OnClick="@(() => Nav.NavigateTo($"/Book/{context.Id}"))"
                           StartIcon="@Icons.Material.Filled.OpenInNew">书籍详情
                </MudButton>
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new[] { 10, 25, int.MaxValue }"
                           RowsPerPageString="每页行数："
                           InfoFormat="{first_item}-{last_item}, 共{all_items}本书"
                           AllItemsText="全部"
                           HorizontalAlignment="@HorizontalAlignment.Center"/>
        </PagerContent>
    </MudTable>
</MudPaper>

<MudScrollToTop>
    <MudFab Color="Color.Tertiary" StartIcon="@Icons.Material.Filled.ArrowUpward" />
</MudScrollToTop>

@code{

    [CascadingParameter(Name = "Member")]
    [NotNull]
    public UserModel? Member { get; set; }
    
    private async Task OpenDialogAsync()
    {
        var options = new DialogOptions(){BackgroundClass="my-dialog-class"};
        var a = await DialogService.ShowAsync<AddBookDialog>("添加书籍", options);
        var result = await a.Result;

        if (result is { Canceled: false })
        {
            if (result.Data is not BookModel book) return;
            var jwt = (JwtProvider)authStateProvider;
            var cookie = await jwt.GetCookie();
            httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", cookie);
            var response = await httpClient.PostAsJsonAsync($"{DataStatic.BaseUrl}/Book", book);
            if (response.IsSuccessStatusCode)
            {
                var newBook = await response.Content.ReadFromJsonAsync<BookModel>();
                if (newBook is null) return;
                Snackbar.Add("添加书籍成功", Severity.Success);
                Member.CreatedBooks.Add(newBook);
            }
        }
    }
}

<style>
    .ava {
        height: 100%;
    }

    @@media screen and (max-width: 768px) {
        .ava {
            height: auto;
        }
    }
</style>