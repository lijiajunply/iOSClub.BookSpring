@using System.Diagnostics.CodeAnalysis
@using BookSpring.WebApp.Models
@inherits LayoutComponentBase
@layout MainLayout

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
                       OnClick="@((e) => DrawerToggle())"/>
        <MudButton Href="/"
                   Variant="Variant.Text"
                   Color="Color.Inherit"
                   Style="text-transform:none">
            <MudIcon Icon="@Icons.Material.Rounded.LocalLibrary"/>
            <MudText Typo="Typo.h5" Class="ml-3">iLibrary</MudText>
        </MudButton>
        <MudSpacer/>
        <MudIconButton Icon="@Icons.Material.Filled.Notifications" Color="Color.Inherit"/>
        <MudIconButton Icon="@(IsDarkTheme ? Icons.Material.Rounded.DarkMode : Icons.Material.Rounded.LightMode)"
                       OnClick="() => ThemeChange(!IsDarkTheme)" Color="Color.Inherit"/>
        <MudMenu ActivationEvent="@MouseEvent.LeftClick"
                 AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
            <ActivatorContent>
                <MudIconButton Icon="@Icons.Material.Rounded.Person"
                               Color="Color.Inherit" Edge="Edge.End"/>
            </ActivatorContent>
            <ChildContent>
                @if (!string.IsNullOrEmpty(Member.Id))
                {
                    <MudMenuItem Icon="@Icons.Material.Rounded.Dashboard" Href="/Dashboard">
                        个人面板
                    </MudMenuItem>   
                }
                <MudMenuItem Icon="@Icons.Material.Rounded.LocalLibrary" Href="/Library">
                    图书馆
                </MudMenuItem>
                <MudMenuItem Icon="@Icons.Material.Rounded.Category" Href="/Category">
                    书籍列表
                </MudMenuItem>
                @if (Member.Identity == "Admin")
                {
                    <MudMenuItem Icon="@Icons.Material.Rounded.AdminPanelSettings" Href="/Admin">
                        数据面板
                    </MudMenuItem>
                }
                <MudMenuItem Icon="@Icons.Material.Rounded.Logout" Href="/Logout">
                    注销
                </MudMenuItem>
            </ChildContent>
        </MudMenu>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <MudNavMenu Rounded Class="pa-2" Margin="Margin.Normal" Color="Color.Primary">
            @if (!string.IsNullOrEmpty(Member.Id))
            {
                <MudNavLink Icon="@Icons.Material.Rounded.Dashboard" Href="/Dashboard" Match="NavLinkMatch.All">
                    个人面板
                </MudNavLink>   
            }
            <MudNavLink Icon="@Icons.Material.Rounded.LibraryBooks" Href="/Library" Match="NavLinkMatch.Prefix">
                图书馆
            </MudNavLink>
            <MudNavLink Icon="@Icons.Material.Rounded.Category" Href="/Category" Match="NavLinkMatch.Prefix">
                书籍列表
            </MudNavLink>
            @if (Member.Identity == "Admin")
            {
                <MudNavLink Icon="@Icons.Material.Rounded.AdminPanelSettings" Href="/Admin" 
                            Match="NavLinkMatch.Prefix">
                    数据面板
                </MudNavLink>
            }
            @if (!string.IsNullOrEmpty(Member.Id))
            {
                <MudNavLink Icon="@Icons.Material.Rounded.Logout" Href="/Logout" Match="NavLinkMatch.Prefix">
                    注销
                </MudNavLink>   
            }
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {

    [CascadingParameter(Name = "Member")]
    [NotNull]
    public UserModel? Member { get; set; }

    [CascadingParameter(Name = "IsDarkTheme")]
    public bool IsDarkTheme { get; set; }

    [CascadingParameter(Name = "ThemeChanged")]
    [NotNull]
    public Action<bool>? ThemeChanged { get; set; }

    private void ThemeChange(bool darkMode)
    {
        ThemeChanged(darkMode);
    }

    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

}